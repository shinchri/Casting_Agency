{
	"info": {
		"_postman_id": "e2b80e42-f175-4f36-bb3e-d508cc195579",
		"name": "capstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/3/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since permission is not allowed\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Chris Shin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/3/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"3",
								"edit"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlQxcWJhZFc0X2luMzJJcTV2b0JDNCJ9.eyJpc3MiOiJodHRwczovL2Rldi1vb3BzLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2MGZiOTUwZjM1ODJiYzAwNjk0NWYzNzMiLCJhdWQiOiJjYXN0aW5nX2FnZW5jeSIsImlhdCI6MTYyNzE0NDQyNywiZXhwIjoxNjI3MjE2NDI3LCJhenAiOiJ6ak1TNGQ5Z1R6VXJxQU5YS2xValhHVEo2RXFGSzJPbiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiXX0.RayY0ecPek44abZSSyZyccRfrtTfOAw31QSRKHlPq93cz1P-OBuDVerzzjJsUGrSBghTwgJq1gIcnCTBEfc0TtrqzA4IvCP-k5I7dRszQf_-ANQJKQICmgHs54B-MJ4Yl-yoUqVpfeKbfORhmkwCpJ0SGY1-YPHCZXC8OA1vCDERjPrJ8ELAI9ane457ktF8oTRnHi5cYv-JwbMCJnopcN_hPTJ8147epj3fOAvLtIW3-4HVGEeW85PlEC1EG0i2QSCZqf4h2hbd2FCrxaTS6QFDby7b0NVwUkF6anKn-1BcdVss_2BLrZsfY7Tw8OGsteBCupNGfd8wINqjzOrtZw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lindsay\",\n    \"age\": 27,\n    \"gender\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/3/delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since permission is not allowed\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/3/delete",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"3",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/3/edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('Object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Chris Shin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/3/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"3",
								"edit"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlQxcWJhZFc0X2luMzJJcTV2b0JDNCJ9.eyJpc3MiOiJodHRwczovL2Rldi1vb3BzLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2MGZiOTU1MzI0NTRmMjAwNmEyMzI1YjciLCJhdWQiOiJjYXN0aW5nX2FnZW5jeSIsImlhdCI6MTYyNzE0NDg0OCwiZXhwIjoxNjI3MjE2ODQ4LCJhenAiOiJ6ak1TNGQ5Z1R6VXJxQU5YS2xValhHVEo2RXFGSzJPbiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiXX0.kBXvSQlSsRx9ABNF8RKzryq8H920FJt5KLAiC8-zcVWnBkGvCXKVQTQB1OZ_kQvibX0f6Ge5UQFwxRezWzZ2DGoKIi4_F0ZeYBzUpHOG4EOIXdPITrBl7B7C2_Xfgd-h3JZY0Jk96MEHRqenMXsm03d21x-YOYJGgPiKTUhgTdJqhSg75kXzzy4TBQd_hpYwZZw0HIenQgGUYvTg0ebkhElqjHssXvH1IsWZWhm4Hll7ICv8L50jEFMM329wz3iXC4pITi-WDn78D0TuVMgIf3sXO1HDj8bSOAUvLDmC9014kXHFs3vggFUbZWLHqQnIn1xJL0na4ehYU6JtYcB3fw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "/movies/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Snake Eyes\",\n    \"release_date\": \"03-14-2020\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Benji\",\n    \"age\": 33,\n    \"gender\": \"male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/3/delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/3/delete",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"3",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/4/edit",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Batman 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/4/edit",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"4",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/3/delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/3/delete",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"3",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlQxcWJhZFc0X2luMzJJcTV2b0JDNCJ9.eyJpc3MiOiJodHRwczovL2Rldi1vb3BzLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2MGZiOTU3NzI0NTRmMjAwNmEyMzI1YmYiLCJhdWQiOiJjYXN0aW5nX2FnZW5jeSIsImlhdCI6MTYyNzE1ODY3MSwiZXhwIjoxNjI3MjMwNjcxLCJhenAiOiJ6ak1TNGQ5Z1R6VXJxQU5YS2xValhHVEo2RXFGSzJPbiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImRlbGV0ZTptb3ZpZXMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIiwicG9zdDptb3ZpZXMiXX0.j9mIUUbbCchh7TWO8ma7z4MkgFV9S9XDrR5fIPcAUM54fBc1HEP_nyNkQhuQEDXRpnW0CuD3WpXSak3lvSR2-ZD9nKWJfWu3I8oE95yDFMuf8f8jguCcpuplskzIZPem466QPJGSCAG5hLgRow4-G1spSI30t-Q1M2JF68YnStNBkeTZXKuL1sU88feBw6eiTjw9i9ZP_kIK0DvNIM0Ch0yUdmelEeNRBb9UoxCA9zhBoN6R-2jkzKc9D_9MxMdn5N7oz17uRoLUXdosnfeV8SEBEkE0A4wEFGaGTYnc9VXOjvOvIGvQwNtunHHKwXJLrxbEuHtBigJ0LQo-DIqRJA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000"
		}
	]
}